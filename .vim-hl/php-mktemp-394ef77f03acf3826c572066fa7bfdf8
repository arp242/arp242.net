#!/usr/bin/env php
<span class="Special">&lt;?php</span>

<span class="Comment">/**</span>
<span class="Comment"> * Make a temporary file or directory in $prefix</span>
<span class="Comment"> *</span>
<span class="Comment"> * If $prefix is Null, sys_get_temp_dir() is used</span>
<span class="Comment"> *</span>
<span class="Comment"> * The template can be any file name, all sequences of two or more subsequent</span>
<span class="Comment"> * X's are replaced by random alphanumeric characters</span>
<span class="Comment"> *</span>
<span class="Comment"> * If $dir is True, a directory is created</span>
<span class="Comment"> *</span>
<span class="Comment"> * A MktempError is thrown if an error occurs</span>
<span class="Comment"> *</span>
<span class="Comment"> * We return the full path to the created file or directory.</span>
<span class="Comment"> *</span>
<span class="Comment"> * This implementation is written by Martin Tournoij &lt;martin@arp242.net&gt;, while</span>
<span class="Comment"> * peeking at FreeBSD's implementation of mkstemp (src/lib/libc/stdio/mktemp.c)</span>
<span class="Comment"> * http://www.arp242.net/php-mktemp.html</span>
<span class="Comment"> */</span>
<span class="PreProc">function</span> mktemp<span class="Special">(</span><span class="Statement">$</span><span class="Identifier">template</span><span class="Statement">=</span><span class="Type">Null</span>, <span class="Statement">$</span><span class="Identifier">prefix</span><span class="Statement">=</span><span class="Type">Null</span>, <span class="Statement">$</span><span class="Identifier">dir</span><span class="Statement">=</span><span class="Constant">False</span><span class="Special">)</span>
<span class="Special">{</span>
    <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">template</span> <span class="Statement">===</span> <span class="Type">Null</span><span class="Special">)</span>
        <span class="Statement">$</span><span class="Identifier">template</span> <span class="Statement">=</span> <span class="Constant">'XXXXXX'</span>;
    <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">prefix</span> <span class="Statement">===</span> <span class="Type">Null</span><span class="Special">)</span>
        <span class="Statement">$</span><span class="Identifier">prefix</span> <span class="Statement">=</span> <span class="Identifier">sys_get_temp_dir</span><span class="Special">()</span>;

    <span class="Comment"># Check if we can write to $prefix, we will *not* create this directory!</span>
    <span class="Statement">$</span><span class="Identifier">oprefix</span> <span class="Statement">=</span> <span class="Statement">$</span><span class="Identifier">prefix</span>;
    <span class="Statement">$</span><span class="Identifier">prefix</span> <span class="Statement">=</span> <span class="Identifier">realpath</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Special">)</span>;
    <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">prefix</span> <span class="Statement">===</span> <span class="Constant">False</span> <span class="Statement">||</span> <span class="Statement">!</span><span class="Identifier">is_dir</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Special">))</span>
        <span class="Statement">throw</span> <span class="PreProc">new</span> MktempError<span class="Special">(</span><span class="Constant">&quot;Prefix `</span><span class="Statement">$</span><span class="Identifier">oprefix</span><span class="Constant">' doesn't exists or isn't a directory&quot;</span><span class="Special">)</span>;
    <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">!</span><span class="Identifier">is_writable</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Special">))</span>
        <span class="Statement">throw</span> <span class="PreProc">new</span> MktempError<span class="Special">(</span><span class="Constant">&quot;Prefix `</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Constant">' isn't writable&quot;</span><span class="Special">)</span>;

    <span class="Comment"># Some sanity checks in $template</span>
    <span class="Statement">if</span> <span class="Special">(</span><span class="Identifier">strpos</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">template</span>, <span class="Constant">'/'</span><span class="Special">)</span> <span class="Statement">!==</span> <span class="Constant">False</span><span class="Special">)</span>
        <span class="Statement">throw</span> <span class="PreProc">new</span> MktempException<span class="Special">(</span><span class="Constant">&quot;Template `</span><span class="Statement">$</span><span class="Identifier">template</span><span class="Constant">' contains a slash (/) character&quot;</span><span class="Special">)</span>;
    <span class="Statement">if</span> <span class="Special">(</span><span class="Identifier">strlen</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">template</span><span class="Special">)</span> <span class="Statement">&gt;</span> PHP_MAXPATHLEN<span class="Special">)</span>
        <span class="Statement">throw</span> <span class="PreProc">new</span> MktempException<span class="Special">(</span><span class="Constant">&quot;Template `</span><span class="Statement">$</span><span class="Identifier">template</span><span class="Constant">' is longer than PHP_MAXPATHLEN&quot;</span><span class="Special">)</span>;

    <span class="Comment"># Replacement characters for the X's</span>
    <span class="Statement">$</span><span class="Identifier">padchars</span> <span class="Statement">=</span> <span class="Constant">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;</span>;

    <span class="Comment"># Replace two or more XX's with a random choice from $padchars</span>
    <span class="Statement">$</span><span class="Identifier">name</span> <span class="Statement">=</span> <span class="Constant">''</span>;
    <span class="Statement">$</span><span class="Identifier">doreplace</span> <span class="Statement">=</span> <span class="Constant">False</span>;
    <span class="Statement">$</span><span class="Identifier">Xs</span> <span class="Statement">=</span> <span class="Special">[]</span>;
    <span class="Statement">foreach</span> <span class="Special">(</span><span class="Identifier">range</span><span class="Special">(</span><span class="Constant">0</span>, <span class="Identifier">strlen</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">template</span><span class="Special">))</span> <span class="Statement">as</span> <span class="Statement">$</span><span class="Identifier">i</span><span class="Special">)</span> <span class="Special">{</span>
        <span class="Statement">$</span><span class="Identifier">c</span> <span class="Statement">=</span> <span class="Identifier">substr</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">template</span>, <span class="Statement">$</span><span class="Identifier">i</span>, <span class="Constant">1</span><span class="Special">)</span>;
        <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">c</span> <span class="Statement">!==</span> <span class="Constant">'X'</span><span class="Special">)</span>
            <span class="Statement">$</span><span class="Identifier">doreplace</span> <span class="Statement">=</span> <span class="Constant">False</span>;
        <span class="Statement">elseif</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">c</span> <span class="Statement">===</span> <span class="Constant">'X'</span> <span class="Statement">&amp;&amp;</span> <span class="Identifier">substr</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">template</span>, <span class="Statement">$</span><span class="Identifier">i</span> <span class="Statement">+</span> <span class="Constant">1</span>, <span class="Constant">1</span><span class="Special">)</span> <span class="Statement">===</span> <span class="Constant">'X'</span><span class="Special">)</span>
            <span class="Statement">$</span><span class="Identifier">doreplace</span> <span class="Statement">=</span> <span class="Constant">True</span>;

        <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">doreplace</span><span class="Special">)</span> <span class="Special">{</span>
            <span class="Statement">$</span><span class="Identifier">c</span> <span class="Statement">=</span> <span class="Statement">$</span><span class="Identifier">padchars</span><span class="Special">[</span><span class="Identifier">mt_rand</span><span class="Special">(</span><span class="Constant">0</span>, <span class="Identifier">strlen</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">padchars</span><span class="Special">)</span> <span class="Statement">-</span> <span class="Constant">1</span><span class="Special">)]</span>;
            <span class="Statement">$</span><span class="Identifier">Xs</span><span class="Special">[]</span> <span class="Statement">=</span> <span class="Statement">$</span><span class="Identifier">i</span>;
        <span class="Special">}</span>

        <span class="Statement">$</span><span class="Identifier">name</span> <span class="Statement">.=</span> <span class="Statement">$</span><span class="Identifier">c</span>;
    <span class="Special">}</span>

    <span class="Statement">if</span> <span class="Special">(</span><span class="Identifier">count</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">Xs</span><span class="Special">)</span> <span class="Statement">===</span> <span class="Constant">0</span><span class="Special">)</span>
        <span class="Statement">throw</span> <span class="PreProc">new</span> MktempError<span class="Special">(</span><span class="Constant">&quot;No sequence of two or more X characters in template `</span><span class="Statement">$</span><span class="Identifier">template</span><span class="Constant">'&quot;</span><span class="Special">)</span>;

    <span class="Statement">$</span><span class="Identifier">maxpermutations</span> <span class="Statement">=</span> <span class="Identifier">pow</span><span class="Special">(</span><span class="Identifier">strlen</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">padchars</span><span class="Special">)</span>, <span class="Identifier">count</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">Xs</span><span class="Special">))</span>;
    <span class="Statement">$</span><span class="Identifier">permutation</span> <span class="Statement">=</span> <span class="Constant">0</span>;
    <span class="Statement">$</span><span class="Identifier">curpos</span> <span class="Statement">=</span> <span class="Identifier">array_shift</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">Xs</span><span class="Special">)</span>;
    <span class="Statement">$</span><span class="Identifier">startchr</span> <span class="Statement">=</span> <span class="Identifier">strpos</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">padchars</span>, <span class="Identifier">substr</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">name</span>, <span class="Statement">$</span><span class="Identifier">curpos</span>, <span class="Constant">1</span><span class="Special">))</span> <span class="Statement">-</span> <span class="Constant">1</span>;
    <span class="Statement">$</span><span class="Identifier">trychr</span> <span class="Statement">=</span> <span class="Statement">$</span><span class="Identifier">startchr</span>;
    <span class="Statement">while</span> <span class="Special">(</span><span class="Constant">true</span><span class="Special">)</span> <span class="Special">{</span>
        <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">permutation</span> <span class="Statement">&gt;=</span> <span class="Statement">$</span><span class="Identifier">maxpermutations</span><span class="Special">)</span>
            <span class="Statement">throw</span> <span class="PreProc">new</span> MktempError<span class="Special">(</span><span class="Constant">&quot;Unable to create </span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Constant">/</span><span class="Statement">$</span><span class="Identifier">template</span><span class="Constant">; all possible file permutations already exist&quot;</span><span class="Special">)</span>;

        <span class="Comment"># Try to create file/directory</span>
        <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">dir</span><span class="Special">)</span> <span class="Special">{</span>
            <span class="Statement">$</span><span class="Identifier">s</span> <span class="Statement">=</span> @<span class="Identifier">mkdir</span><span class="Special">(</span><span class="Constant">&quot;</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Constant">/</span><span class="Statement">$</span><span class="Identifier">name</span><span class="Constant">&quot;</span>, <span class="Constant">0700</span><span class="Special">)</span>;

            <span class="Comment"># What we *really* want to do is do something along the lines of</span>
            <span class="Comment"># `errno == EEXISTS' in C. In PHP there is, as far as I can see, no</span>
            <span class="Comment"># way to do this.</span>
            <span class="Comment"># The only thing we can do is run error_get_last(), and get a text</span>
            <span class="Comment"># message, which is locale-dependent and may change in future PHP</span>
            <span class="Comment"># versions.</span>
            <span class="Comment">#</span>
            <span class="Comment"># This check is needed, because all sort of things can go wrong (</span>
            <span class="Comment"># permissions of $prefix changed, signal caught, symlink loop, max</span>
            <span class="Comment"># file descriptors, etc).</span>
            <span class="Comment">#</span>
            <span class="Comment"># The file_exists() sort of solves the problem, I can't think of any</span>
            <span class="Comment"># serious drawbacks, but it's extra disk I/O, and in very, *VERY*</span>
            <span class="Comment"># rare cases it's not reliable (fopen() failed for another reason &amp;</span>
            <span class="Comment"># this file is created before we arrive at this check)</span>
            <span class="Comment">#</span>
            <span class="Comment"># There's a bug for this, but it doesn't seem to be considered much</span>
            <span class="Comment"># of a priority...  https://bugs.php.net/bug.php?id=49396</span>
            <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">!</span><span class="Statement">$</span><span class="Identifier">s</span> <span class="Statement">&amp;&amp;</span> <span class="Identifier">file_exists</span><span class="Special">(</span><span class="Constant">&quot;</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Constant">/</span><span class="Statement">$</span><span class="Identifier">name</span><span class="Constant">&quot;</span><span class="Special">))</span> <span class="Special">{</span>
                <span class="Statement">$</span><span class="Identifier">err</span> <span class="Statement">=</span> <span class="Identifier">error_get_last</span><span class="Special">()</span>;
                <span class="Statement">throw</span> <span class="PreProc">new</span> MktempError<span class="Special">(</span><span class="Constant">&quot;Error creating `</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Constant">/</span><span class="Statement">$</span><span class="Identifier">name</span><span class="Constant">': </span><span class="Special">{</span><span class="Statement">$</span><span class="Identifier">err</span><span class="Special">[</span><span class="Constant">'message'</span><span class="Special">]}</span><span class="Constant">&quot;</span><span class="Special">)</span>;
            <span class="Special">}</span>
            <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">s</span><span class="Special">)</span> <span class="Statement">break</span>;
        <span class="Special">}</span>
        <span class="Statement">else</span> <span class="Special">{</span>
            <span class="Statement">$</span><span class="Identifier">s</span> <span class="Statement">=</span> @<span class="Identifier">fopen</span><span class="Special">(</span><span class="Constant">&quot;</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Constant">/</span><span class="Statement">$</span><span class="Identifier">name</span><span class="Constant">&quot;</span>, <span class="Constant">'x'</span><span class="Special">)</span>;

            <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">s</span> <span class="Statement">===</span> <span class="Constant">False</span> <span class="Statement">&amp;&amp;</span> <span class="Statement">!</span><span class="Identifier">file_exists</span><span class="Special">(</span><span class="Constant">&quot;</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Constant">/</span><span class="Statement">$</span><span class="Identifier">name</span><span class="Constant">&quot;</span><span class="Special">))</span> <span class="Special">{</span>
                <span class="Statement">$</span><span class="Identifier">err</span> <span class="Statement">=</span> <span class="Identifier">error_get_last</span><span class="Special">()</span>;
                <span class="Statement">throw</span> <span class="PreProc">new</span> MktempError<span class="Special">(</span><span class="Constant">&quot;Error creating `</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Constant">/</span><span class="Statement">$</span><span class="Identifier">name</span><span class="Constant">': </span><span class="Special">{</span><span class="Statement">$</span><span class="Identifier">err</span><span class="Special">[</span><span class="Constant">'message'</span><span class="Special">]}</span><span class="Constant">&quot;</span><span class="Special">)</span>;
            <span class="Special">}</span>

            <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">s</span> <span class="Statement">!==</span> <span class="Constant">False</span><span class="Special">)</span> <span class="Special">{</span>
                <span class="Identifier">fclose</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">s</span><span class="Special">)</span>;
                <span class="Identifier">chmod</span><span class="Special">(</span><span class="Constant">&quot;</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Constant">/</span><span class="Statement">$</span><span class="Identifier">name</span><span class="Constant">&quot;</span>, <span class="Constant">0600</span><span class="Special">)</span>;
                <span class="Statement">break</span>;
            <span class="Special">}</span>
        <span class="Special">}</span>

        <span class="Comment"># Loop over each X we replaced, and try the next character from</span>
        <span class="Comment"># $padchars</span>
        <span class="Statement">$</span><span class="Identifier">permutation</span> <span class="Statement">+=</span> <span class="Constant">1</span>;
        <span class="Statement">$</span><span class="Identifier">trychr</span> <span class="Statement">+=</span> <span class="Constant">1</span>;
        <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">trychr</span> <span class="Statement">&gt;</span> <span class="Identifier">strlen</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">padchars</span><span class="Special">)</span> <span class="Statement">-</span> <span class="Constant">1</span><span class="Special">)</span>
            <span class="Statement">$</span><span class="Identifier">trychr</span> <span class="Statement">=</span> <span class="Constant">0</span>;

        <span class="Statement">if</span> <span class="Special">(</span><span class="Statement">$</span><span class="Identifier">trychr</span> <span class="Statement">===</span> <span class="Statement">$</span><span class="Identifier">startchr</span><span class="Special">)</span> <span class="Special">{</span>
            <span class="Statement">$</span><span class="Identifier">curpos</span> <span class="Statement">=</span> <span class="Identifier">array_shift</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">Xs</span><span class="Special">)</span>;
            <span class="Statement">$</span><span class="Identifier">startchr</span> <span class="Statement">=</span> <span class="Identifier">strpos</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">padchars</span>, <span class="Identifier">substr</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">name</span>, <span class="Statement">$</span><span class="Identifier">curpos</span>, <span class="Constant">1</span><span class="Special">))</span> <span class="Statement">-</span> <span class="Constant">1</span>;
            <span class="Statement">$</span><span class="Identifier">trychr</span> <span class="Statement">=</span> <span class="Statement">$</span><span class="Identifier">startchr</span> <span class="Statement">+</span> <span class="Constant">1</span>;
        <span class="Special">}</span>

        <span class="Statement">$</span><span class="Identifier">name</span> <span class="Statement">=</span> <span class="Identifier">substr_replace</span><span class="Special">(</span><span class="Statement">$</span><span class="Identifier">name</span>, <span class="Statement">$</span><span class="Identifier">padchars</span><span class="Special">[</span><span class="Statement">$</span><span class="Identifier">trychr</span><span class="Special">]</span>, <span class="Statement">$</span><span class="Identifier">curpos</span>, <span class="Constant">1</span><span class="Special">)</span>;
    <span class="Special">}</span>

    <span class="Statement">return</span> <span class="Constant">&quot;</span><span class="Statement">$</span><span class="Identifier">prefix</span><span class="Constant">/</span><span class="Statement">$</span><span class="Identifier">name</span><span class="Constant">&quot;</span>;
<span class="Special">}</span>

<span class="Type">class</span> MktempError <span class="Type">extends</span> <span class="Identifier">Exception</span> <span class="Special">{</span> <span class="Special">}</span>
